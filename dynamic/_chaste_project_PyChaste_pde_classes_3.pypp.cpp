// This file has been generated by Py++.

#include "boost/python.hpp"
#include "/home/grogan/Chaste/projects/PyChaste/dynamic/wrapper_headers/pde_headers.hpp"
#include "_chaste_project_PyChaste_pde_classes_3.pypp.hpp"

namespace bp = boost::python;

struct ConstBoundaryCondition_less__2__greater__wrapper : ConstBoundaryCondition< 2 >, bp::wrapper< ConstBoundaryCondition< 2 > > {

    ConstBoundaryCondition_less__2__greater__wrapper(ConstBoundaryCondition<2> const & arg )
    : ConstBoundaryCondition<2>( arg )
      , bp::wrapper< ConstBoundaryCondition< 2 > >(){
        // copy constructor
        
    }

    ConstBoundaryCondition_less__2__greater__wrapper(double const value )
    : ConstBoundaryCondition<2>( value )
      , bp::wrapper< ConstBoundaryCondition< 2 > >(){
        // constructor
    
    }

    virtual double GetValue( ::ChastePoint< 2 > const & rX ) const  {
        if( bp::override func_GetValue = this->get_override( "GetValue" ) )
            return func_GetValue( boost::ref(rX) );
        else{
            return this->ConstBoundaryCondition< 2 >::GetValue( boost::ref(rX) );
        }
    }
    
    double default_GetValue( ::ChastePoint< 2 > const & rX ) const  {
        return ConstBoundaryCondition< 2 >::GetValue( boost::ref(rX) );
    }

};

struct ConstBoundaryCondition_less__3__greater__wrapper : ConstBoundaryCondition< 3 >, bp::wrapper< ConstBoundaryCondition< 3 > > {

    ConstBoundaryCondition_less__3__greater__wrapper(ConstBoundaryCondition<3> const & arg )
    : ConstBoundaryCondition<3>( arg )
      , bp::wrapper< ConstBoundaryCondition< 3 > >(){
        // copy constructor
        
    }

    ConstBoundaryCondition_less__3__greater__wrapper(double const value )
    : ConstBoundaryCondition<3>( value )
      , bp::wrapper< ConstBoundaryCondition< 3 > >(){
        // constructor
    
    }

    virtual double GetValue( ::ChastePoint< 3 > const & rX ) const  {
        if( bp::override func_GetValue = this->get_override( "GetValue" ) )
            return func_GetValue( boost::ref(rX) );
        else{
            return this->ConstBoundaryCondition< 3 >::GetValue( boost::ref(rX) );
        }
    }
    
    double default_GetValue( ::ChastePoint< 3 > const & rX ) const  {
        return ConstBoundaryCondition< 3 >::GetValue( boost::ref(rX) );
    }

};

void register_classes_3(){

    { //::ConstBoundaryCondition< 2 >
        typedef bp::class_< ConstBoundaryCondition_less__2__greater__wrapper, bp::bases< AbstractBoundaryCondition< 2 > > > ConstBoundaryCondition2_exposer_t;
        ConstBoundaryCondition2_exposer_t ConstBoundaryCondition2_exposer = ConstBoundaryCondition2_exposer_t( "ConstBoundaryCondition2", bp::init< double >(( bp::arg("value") )) );
        bp::scope ConstBoundaryCondition2_scope( ConstBoundaryCondition2_exposer );
        bp::implicitly_convertible< double const, ConstBoundaryCondition< 2 > >();
        { //::ConstBoundaryCondition< 2 >::GetValue
        
            typedef ConstBoundaryCondition< 2 > exported_class_t;
            typedef double ( exported_class_t::*GetValue_function_type)( ::ChastePoint< 2 > const & ) const;
            typedef double ( ConstBoundaryCondition_less__2__greater__wrapper::*default_GetValue_function_type)( ::ChastePoint< 2 > const & ) const;
            
            ConstBoundaryCondition2_exposer.def( 
                "GetValue"
                , GetValue_function_type(&::ConstBoundaryCondition< 2 >::GetValue)
                , default_GetValue_function_type(&ConstBoundaryCondition_less__2__greater__wrapper::default_GetValue)
                , ( bp::arg("rX") ) );
        
        }
    }

    { //::ConstBoundaryCondition< 3 >
        typedef bp::class_< ConstBoundaryCondition_less__3__greater__wrapper, bp::bases< AbstractBoundaryCondition< 3 > > > ConstBoundaryCondition3_exposer_t;
        ConstBoundaryCondition3_exposer_t ConstBoundaryCondition3_exposer = ConstBoundaryCondition3_exposer_t( "ConstBoundaryCondition3", bp::init< double >(( bp::arg("value") )) );
        bp::scope ConstBoundaryCondition3_scope( ConstBoundaryCondition3_exposer );
        bp::implicitly_convertible< double const, ConstBoundaryCondition< 3 > >();
        { //::ConstBoundaryCondition< 3 >::GetValue
        
            typedef ConstBoundaryCondition< 3 > exported_class_t;
            typedef double ( exported_class_t::*GetValue_function_type)( ::ChastePoint< 3 > const & ) const;
            typedef double ( ConstBoundaryCondition_less__3__greater__wrapper::*default_GetValue_function_type)( ::ChastePoint< 3 > const & ) const;
            
            ConstBoundaryCondition3_exposer.def( 
                "GetValue"
                , GetValue_function_type(&::ConstBoundaryCondition< 3 >::GetValue)
                , default_GetValue_function_type(&ConstBoundaryCondition_less__3__greater__wrapper::default_GetValue)
                , ( bp::arg("rX") ) );
        
        }
    }

}
