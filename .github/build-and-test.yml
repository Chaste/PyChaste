name: build-and-test

on:
  workflow_dispatch:
  pull_request:
    branches:
      - '**'

jobs:
  
  build-and-test:

    if: ${{ !contains(github.event.pull_request.labels.*.name, 'ci:off') }}

    runs-on: ubuntu-22.04

    env:
      CHASTE_TEST_OUTPUT: ${{ github.workspace }}/chaste-test-dir

    - name: checkout chaste repository
      uses: actions/checkout@v3
      with:
        repository: Chaste/Chaste
        path: Chaste
        submodules: recursive

    - name: checkout pychaste repository
      uses: actions/checkout@v3
      with:
        path: Chaste/projects/PyChaste
        submodules: recursive

    - name: install dependencies
      run: |
        echo 'deb [signed-by=/usr/share/keyrings/chaste.asc] https://www.cs.ox.ac.uk/chaste/ubuntu ${{ matrix.codename }}/' | sudo tee -a /etc/apt/sources.list.d/chaste.list
        sudo wget -O /usr/share/keyrings/chaste.asc https://www.cs.ox.ac.uk/chaste/ubuntu/ChasteTeam.asc
        sudo apt update
        sudo apt install chaste-dependencies
        sudo apt install castxml python3-vtk7 python3-notebook python3-petsc4py xvfb python3-xvfbwrapper python3-pytest python3-numpy python3-matplotlib python3-six
        sudo pip3 install pygccxml pyyaml

    - name: make build and test directories
      run: |
        mkdir -p Chaste/build
        mkdir -p ${CHASTE_TEST_OUTPUT}

    - name: cmake configure
      run: cmake -DCMAKE_BUILD_TYPE=Release ..
      working-directory: Chaste/build

    - name: build project_PyChaste
      run: cmake --build . --parallel 2 --target project_PyChaste
      working-directory: Chaste/build

    - name: build project_PyChaste_Python
      run: cmake --build . --parallel 2 --target project_PyChaste_Python
      working-directory: Chaste/build

    - name: install PyChaste
      run: pip install --user .
      working-directory: Chaste/build/projects/PyChaste/python

    # - name: run test packs
    #   run: python ./ode/TestOdeSystemPython.py
    #   working-directory: Chaste/projects/PyChaste/test/python
