name: build-and-test

on:
  workflow_dispatch:
  pull_request:
    branches:
      - '**'

jobs:
  
  build-and-test:

    if: ${{ !contains(github.event.pull_request.labels.*.name, 'ci:off') }}

    runs-on: ubuntu-22.04

    env:
      CHASTE_TEST_OUTPUT: ${{ github.workspace }}/chaste-test-dir
      
    steps:
    - name: checkout Chaste repository
      uses: actions/checkout@v3
      with:
        repository: Chaste/Chaste
        ref: develop
        path: Chaste
        submodules: recursive

    - name: checkout PyChaste repository
      uses: actions/checkout@v3
      with:
        path: Chaste/projects/PyChaste
        submodules: recursive

    - name: install Chaste dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends \
          cmake \
          cmake-curses-gui \
          doxygen \
          g++ \
          git \
          gnuplot \
          graphviz \
          hdf5-tools \
          lcov \
          libboost-serialization-dev \
          libboost-filesystem-dev \
          libboost-program-options-dev \
          libfltk1.1 \
          libhdf5-openmpi-dev \
          libmetis-dev \
          libopenmpi-dev \
          libparmetis-dev \
          libpetsc-real3.15-dbg \
          libsundials-dev \
          libvtk7-dev \
          libxerces-c-dev \
          mencoder \
          paraview \
          petsc-dev \
          python3 \
          python3-dev \
          python3-pip \
          python3-venv \
          valgrind \
          xsdcxx
      
    - name: install PyChaste dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          castxml \
          python3-matplotlib \
          python3-notebook \
          python3-numpy \
          python3-petsc4py \
          python3-pytest \
          python3-six \
          python3-vtk7 \
          python3-xvfbwrapper \
          xvfb
        sudo pip3 install pygccxml pyyaml

    - name: make build and test directories
      run: |
        mkdir -p Chaste/build
        mkdir -p ${CHASTE_TEST_OUTPUT}

    - name: cmake configure
      run: cmake -DCMAKE_BUILD_TYPE=Release ..
      working-directory: Chaste/build

    - name: build project_PyChaste
      run: cmake --build . --parallel 2 --target project_PyChaste
      working-directory: Chaste/build

    - name: build project_PyChaste_Python
      run: cmake --build . --parallel 2 --target project_PyChaste_Python
      working-directory: Chaste/build

    - name: install PyChaste
      run: pip install --user .
      working-directory: Chaste/build/projects/PyChaste/python

    # - name: run test packs
    #   run: python ./ode/TestOdeSystemPython.py
    #   working-directory: Chaste/projects/PyChaste/test/python
